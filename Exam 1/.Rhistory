Percent=rep(print(paste(pbirthday(i, coincident = 3)))))
for (i in seq(from = 0, to = 300, by = 50)) {
print(paste(pbirthday(i, coincident = 3)))
}
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste(pbirthday(i, coincident = 3)))))
k <- for (i in seq(from = 0, to = 300, by = 50)) {
print(paste(pbirthday(i, coincident = 3)))
}
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste(pbirthday(k, coincident = 3)))))
k <- as.numeric(for (i in seq(from = 0, to = 300, by = 50)) {
print(paste(pbirthday(i, coincident = 3)))
})
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste(pbirthday(k, coincident = 3)))))
k <- for (i in seq(from = 0, to = 300, by = 50)) {
print(paste(pbirthday(i, coincident = 3)))
}
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste(pbirthday(i, coincident = 3)))))
as.table(table)
head(table)
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste0(pbirthday(i, coincident = 3)),sep = "")))
head(table)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
for (i in seq(from = 0, to = 300, by = 50)) {
print(paste0(pbirthday(i, coincident = 3)), sep = "")
}
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste0(pbirthday(i, coincident = 3)),sep = "")))
head(table)
for (i in seq(from = 0, to = 300, by = 50)) {
print(paste0(pbirthday(i, coincident = 3)), sep = "")
}
table <- data.frame(Number=rep(c(0, 50, 100, 150, 200, 250, 300)),
Percent=rep(print(paste0(pbirthday(i, coincident = 3)))))
head(table)
mat <- matrix(data = seq(0, 300, by=50), nrow = 7, ncol = 2)
for (r in 1:nrow(mat))
print(paste0(pbirthday(r, coincident = 3)))
mat
mat <- matrix(data = seq(0, 300, by=50), nrow = 7, ncol = 2)
for (r in 1:nrow(mat))
for(q in 1:ncol(mat))
print(paste0(pbirthday(q, coincident = 3)))
print(paste0(pbirthday(q, coincident = 3)))
print(paste0("Row", r, pbirthday(q, coincident = 3)))
View(mat)
View(mat)
mat <- matrix(data = seq(0, 300, by=50), nrow = 7, ncol = 2)
for (r in 1:nrow(mat))
for(q in 1:ncol(mat)) {
new <- rep(pbirthday(q, coincident = 3))
}
#for (i in seq(from = 0, to = 300, by = 50)) {
print(paste0(pbirthday(i, coincident = 3)), sep = "")
pbirthday(0, coincident = 3)
pbirthday(50, coincident = 3)
a <- pbirthday(0, coincident = 3)
b <- pbirthday(50, coincident = 3)
c <- pbirthday(100, coincident = 3)
d <- pbirthday(150, coincident = 3)
e <- pbirthday(200, coincident = 3)
f <- pbirthday(250, coincident = 3)
g <- pbirthday(300, coincident = 3)
tab <- matrix(c(0, 50, 100, 150, 200, 250, 300, a, b, c, d, e, f, g), ncol = 2, byrow = F)
tab
for (i in seq(from = 0, to = 300, by = 50)) {
print(paste0(pbirthday(i, coincident = 3)), sep = "")
}
print(i)
x <- seq(0, 300- by = 50)
x <- seq(0, 300, by = 50)
for (i in x)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
print(i)
table <- data.frame(Number=x,
Percent=rep(print(paste0(pbirthday(i, coincident = 3)))))
View(table)
table <- data.frame(Number=x,
Percent=(print(paste0(pbirthday(i, coincident = 3)))))
table <- matrix(x, i, ncol = 2)
table <- matrix(x, print(paste0(pbirthday(i, coincident = 3)), sep = ""), ncol = 2)
v <- print(paste0(pbirthday(i, coincident = 3)), sep = "")
table <- matrix(x, v, ncol = 2)
x <- seq(0, 300, by = 50)
for (i in x)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
v <- print(paste0(pbirthday(i, coincident = 3)), sep = "")
x <- seq(0, 300, by = 50)
for (i in x)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
x <- seq(0, 300, by = 25)
for (i in x)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
pbirthday(88, coincident = 3)
pbirthday(87, coincident = 3)
birthdays <- c(a,b,c,d,e,f,g)
birthdays
library(ggplot2)
?ggplot
df <- c(birthdays, prob)
birthdays <- c(0,50,100,150,200,250,300)
prob <- c(a,b,c,d,e,f,g,)
prob <- c(a,b,c,d,e,f,g)
df <- c(birthdays, prob)
birthdays <- c(0,50,100,150,200,250,300)
prob <- c(a,b,c,d,e,f,g)
df <- c(birthdays, prob)
ggplot(data = df, aes(x = prob, y = birthdays)
+ geom_line())
rlang::last_error()
ggplot(data = df, mapping = aes(x = prob, y = birthdays)
+ geom_line())
ggplot(data = df, +
geom_line(mapping = aes(x = birthdays, y = prob)))
ggplot(data = df) +
geom_line(mapping = aes(x = birthdays, y = prob)))
ggplot(data = df) +
geom_smooth(mapping = aes(x = birthdays, y = prob))
birthdays <- c(0,50,100,150,200,250,300)
prob <- c(a,b,c,d,e,f,g)
df <- data.frame(c(birthdays, prob))
ggplot(data = df) +
geom_smooth(mapping = aes(x = birthdays, y = prob))
View(df)
birthdays <- seq(0, 300, by = 50)
df <- data.frame(c(birthdays, prob))
df <- data.frame(birthdays, prob)
ggplot(data = df) +
geom_smooth(mapping = aes(x = birthdays, y = prob))
ggplot(data = df) +
geom_line(mapping = aes(x = birthdays, y = prob))
birthdays <- x
prob <- c(a,b,c,d,e,f,g)
df <- data.frame(birthdays, prob)
birthdays <- seq(0, 300, by = 50)
prob <- c(a,b,c,d,e,f,g)
df <- data.frame(birthdays, prob)
ggplot(data = df) +
geom_line(mapping = aes(x = birthdays, y = prob))
?markov
install.packages(markovchain)
install.packages("markovchain")
knitr::opts_chunk$set(echo = TRUE)
library(markovchain)
?`markovchain-package`
install.packages(c("boot", "brio", "broom", "bslib", "cachem", "callr", "caret", "cli", "colorspace", "corrplot", "cpp11", "curl", "dbplyr", "desc", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "gert", "gh", "haven", "highr", "hms", "httpuv", "installr", "isoband", "jquerylib", "knitr", "Lahman", "later", "lubridate", "mvtnorm", "nycflights13", "openintro", "openssl", "packrat", "parallelly", "pillar", "pkgload", "processx", "proxy", "ps", "recipes", "remotes", "reprex", "rlang", "rmarkdown", "rsconnect", "rversions", "rvest", "sass", "sf", "shape", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("boot", "brio", "broom", "bslib", "cachem", "callr", "caret", "cli", "colorspace", "corrplot", "cpp11", "curl", "dbplyr", "desc", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "gert", "gh", "haven", "highr", "hms", "httpuv", "installr", "isoband", "jquerylib", "knitr", "Lahman", "later", "lubridate", "mvtnorm", "nycflights13", "openintro", "openssl", "packrat", "parallelly", "pillar", "pkgload", "processx", "proxy", "ps", "recipes", "remotes", "reprex", "rlang", "rmarkdown", "rsconnect", "rversions", "rvest", "sass", "sf", "shape", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("boot", "brio", "broom", "bslib", "cachem", "callr", "caret", "cli", "colorspace", "corrplot", "cpp11", "curl", "dbplyr", "desc", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "gert", "gh", "haven", "highr", "hms", "httpuv", "installr", "isoband", "jquerylib", "knitr", "Lahman", "later", "lubridate", "mvtnorm", "nycflights13", "openintro", "openssl", "packrat", "parallelly", "pillar", "pkgload", "processx", "proxy", "ps", "recipes", "remotes", "reprex", "rlang", "rmarkdown", "rsconnect", "rversions", "rvest", "sass", "sf", "shape", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("boot", "brio", "broom", "bslib", "cachem", "callr", "caret", "cli", "colorspace", "corrplot", "cpp11", "curl", "dbplyr", "desc", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "gert", "gh", "haven", "highr", "hms", "httpuv", "installr", "isoband", "jquerylib", "knitr", "Lahman", "later", "lubridate", "mvtnorm", "nycflights13", "openintro", "openssl", "packrat", "parallelly", "pillar", "pkgload", "processx", "proxy", "ps", "recipes", "remotes", "reprex", "rlang", "rmarkdown", "rsconnect", "rversions", "rvest", "sass", "sf", "shape", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "waldo", "withr", "xfun", "zip", "zoo"))
install.packages(c("boot", "brio", "broom", "bslib", "cachem", "callr", "caret", "cli", "colorspace", "corrplot", "cpp11", "curl", "dbplyr", "desc", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "ellipsis", "fansi", "farver", "gert", "gh", "haven", "highr", "hms", "httpuv", "installr", "isoband", "jquerylib", "knitr", "Lahman", "later", "lubridate", "mvtnorm", "nycflights13", "openintro", "openssl", "packrat", "parallelly", "pillar", "pkgload", "processx", "proxy", "ps", "recipes", "remotes", "reprex", "rlang", "rmarkdown", "rsconnect", "rversions", "rvest", "sass", "sf", "shape", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "waldo", "withr", "xfun", "zip", "zoo"))
?poisson.test
v <- 1:3
names(v) <- c("a","b","c")
v[4] <- 4
knitr::opts_chunk$set(echo = TRUE)
v[4] <- 4
install.packages("NHPoisson")
?NHpoisson
?NHPoisson
?NHPOisson
???NHPoisson
??NHPoisson
knitr::opts_chunk$set(echo = TRUE)
library(NHPoisson)
?NHPoisson
knitr::opts_chunk$set(echo = TRUE)
library(markovchain)
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row_names(transmat) <- c("light", "heavy")
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
transmat
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
col.names(transmat) <- state
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
install.packages(c("expm", "diagram", "pracma"))
knitr::opts_chunk$set(echo = TRUE)
# Setting up transitional matrix
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
box.type = “circle”,
library(markovchain)
library(diagram)
library(expm)
library(pracma)
# Setting up transitional matrix
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
box.type = “circle”,
?plotmat
diagram::plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
box.type = “circle”,
plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
box.type = “circle”,
# Setting up transitional matrix
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
#box.type = “circle”,
box.prop = 0.5,
#box.col = “light yellow”,
arr.length=.1,
arr.width=.1,
self.cex = .4,
self.shifty = -.01,
self.shiftx = .13)#,
plotmat(transmat,pos = c(0,1),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
#box.type = “circle”,
box.prop = 0.5,
#box.col = “light yellow”,
arr.length=.1,
arr.width=.1,
self.cex = .4,
self.shifty = -.01,
self.shiftx = .13)#,
plotmat(transmat,pos = c(2,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
#box.type = “circle”,
box.prop = 0.5,
#box.col = “light yellow”,
arr.length=.1,
arr.width=.1,
self.cex = .4,
self.shifty = -.01,
self.shiftx = .13)#,
plotmat(transmat,pos = c(1,2),
lwd = 1, box.lwd = 2,
cex.txt = 0.8,
box.size = 0.1,
#box.type = “circle”,
box.prop = 0.5,
#box.col = “light yellow”,
arr.length=.1,
arr.width=.1,
self.cex = .4,
self.shifty = -.01,
self.shiftx = .13)#,
# Setting up transitional matrix
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
train_mc <- new("markovchain", transitionMatrix=transmat, states=row.names(transmat), name="Training Markov Chain")
train_mc
train_mc <- new("markovchain", transitionMatrix=transmat, states=c("win", "lose", "light", "heavy"), name="Training Markov Chain")
?new
?`markovchain-package
?markovchain-package
train_mc <- new("markovchain", transitionMatrix=transmat, states=c("win", "lose"), name="Training Markov Chain")
P <- train_mc
P2 <- P%*%P; P2
View(P)
P <- transmat
P2 <- P%*%P; P2
# Setting up transitional matrix
state <- c("win", "lose")
transmat <- matrix(c(0.4, 0.6, 0.8, 0.2), nrow = 2, byrow = T)
row.names(transmat) <- c("light", "heavy")
colnames(transmat) <- state
transmat
train_mc <- new("markovchain", transitionMatrix=transmat, states=row.names(transmat), name="Training Markov Chain")
train_mc
P <- transmat
P2 <- P%*%P; P2
P3 <- P2%*%P2; P3
P4 <- P3%*%P3; P4
P5 <- P4%*%P4; P5
library(MASS)
fraction(0.5714288 )
fractions(0.5714288)
?ppois
rpois(100,12)
claims <- rpois(100,12)
sd(claims)
claims <- rpois(100,12)
sd(claims)
claims <- rpois(100,12)
var(claims)
claims <- ppois(100,12)
var(claims)
claims
claims <- dpois(c(0.5, 0.33, 0.17),12)
var(claims)
claims <- qpois(c(0.5, 0.33, 0.17),12)
var(claims)
claims
claims <- dpois(c(0.5, 0.33, 0.17),12)
claims <- ppois(c(0.5, 0.33, 0.17),12)
claims
var(claims)
claims <- ppois(1,12)
ppois(1,12)
dpois(1,12)
qpois(1,12)
qpois(5/3,12)
dpois(5/3,12)
ppois(5/3,12)
dpois(1,12)
dpois(2,12)
dpois(3,12)
claims <- ppois(0:100,12)
var(claims)
claims <- ppois(0:10000,12)
var(claims)
claims <- dpois(0:10000,12)
var(claims)
claims <- dpois(0:100,12)
var(claims)
claims <- dpois(0:10,12)
var(claims)
claims <- (1*1/2)+(2*1/3)+(3*1/6)
claims
fractions(claims)
n1 <- (12*1/2)
n2 <- (12*1/3)
n3 <- (12*1/6)
dis <- c(n1, n2, ne)
n1 <- (12*1/2)
n2 <- (12*1/3)
n3 <- (12*1/6)
dis <- c(n1, n2, n3)
dist <- c(n1, n2, n3)
dist
n1 <- (12*1/2)
n2 <- (12*1/3)
n3 <- (12*1/6)
dist <- c(n1, n2, n3)
dist
variance <- c(1*n1, 2*n2, 3*n3)
variance
var(n1)+4*var(n2)+9*var(n3)
2claims[1]
2*claims[1]
claims[1]+4*claims[2]+9*claims[3]
n1 <- (12*1/2)
n2 <- (12*1/3)
n3 <- (12*1/6)
dist <- c(n1, n2, n3)
dist
claims <- c(1*n1, 2*n2, 3*n3)
claims
claims[1]+4*claims[2]+9*claims[3]
dist[1]+4*dist[2]+9*dist[3]
setwd("C:/Users/apesi/Desktop/School/Summer 2021/Intro to Stochastic Processes/Exam 1")
mu_y <- 0.5
vari <- 1/12
(1/2)*(mu_y+1)
var <- 1/12
(1/12)(1-2*(1/2)+((1/12)+(1/4))+(1/4)*(1/12))
(1/12)(4/12)+(1/4)(1/12)
(1/12)*(4/12)+(1/4)*(1/12)
7/144
library(MASS)
(1/12)*(1-2*(1/2)+((1/12)+1/4))+(1/4)*(1/12)
10*0.75
fractions(7.5)
install.packages(scales)
install.packages("scales")
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE)
library(scales)
Tom <- 10*0.75
dollar_format($)
dollar_format(prefix="$")
dollar(Tom)
knitr::opts_chunk$set(echo = TRUE)
a <- pbirthday(0, coincident = 3)
b <- pbirthday(50, coincident = 3)
c <- pbirthday(100, coincident = 3)
d <- pbirthday(150, coincident = 3)
e <- pbirthday(200, coincident = 3)
f <- pbirthday(250, coincident = 3)
g <- pbirthday(300, coincident = 3)
tab <- matrix(c(0, 50, 100, 150, 200, 250, 300, a, b, c, d, e, f, g), ncol = 2, byrow = F)
tab
x <- seq(0, 300, by = 25)
for (i in x)
print(paste0(pbirthday(i, coincident = 3)), sep = "")
pbirthday(88, coincident = 3)
x <- seq(0, 300, by = 25)
for (i in x)
three_birth <- 1-e^(x)
three_birth
x <- seq(0, 500, by = 50)
for (i in x)
three_birth <- 1-e^(x)
three_birth
x <- seq(0, 700, by = 50)
for (i in x)
three_birth <- 1-e^(x)
three_birth
1-e^(550)
1-e^(575)
1-e^(-23)
1-e^(23)
x <- seq(0, 700, by = 50)
for (i in x)
three_birth <- 1-e^(-x)
three_birth
x <- seq(0, 200, by = 25)
for (i in x)
three_birth <- 1-e^(-x)
three_birth
x <- seq(0, 200, by = 25)
for (i in x)
three_birth <- e^(-x)
three_birth
x <- seq(0, 200, by = 25)
for (i in x)
three_bday <- 1-e^(-x)
three_bday
1-e^(-253)
1-e^(-.6931)
1-e^(-0)
1-e^(0.6931)
1-e^(253)
(23*(23-1))/730
e^-(23*(23-1))/730
1-e^-(23*(23-1))/730
1-e^-(23*(23-1))/365
1-e^-(23*(23-1)/365)
1-e^-(23*(23-1)/730)
e^-(23*(23-1)/730)
install.packages("pracma")
nchoosek(23,2)
library(pracma)
nchoosek(23,2)
253/365
1-e^(-0.6931507)
e^(-0.6931507)
exp^(-0.6931507)
exp(-0.6931507)
1-exp(-0.6931507)
x <- seq(0, 200, by = 25)
for (i in x)
three_bday <- 1-exp(-x)
three_bday
nchoosek(100,3)
161700/(365^2)
nchoosek(80,3)
82160/(365^2)
nchoosek(80,3)
x <- 82160/(365^2)
1-exp(-x)
y <- seq(0, 100, by = 10)
for (i in y)
z <- nchoosek(y,3)
nchoosek(88,3)
10937/(365^2)
x <- 10937/(365^2)
1-exp(-x)
nchoosek(85,3)
x <- 98770/(365^2)
1-exp(-x)
nchoosek(84,3)
x <- 95284/(365^2)
1-exp(-x)
nchoosek(83,3)
x <- 91881/(365^2)
1-exp(-x)
x <- 95824/(365^2)
1-exp(-x)
nchoosek(84,3)
x <- 95824/(365^2)
1-exp(-x)
nchoosek(83,3)
x <- 91881/(365^2)
1-exp(-x)
